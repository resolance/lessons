package ru.ezhov.lessons.homework.resolance.glava3;

public class Ex_3_1_6 {
/**-------------------------------------------------------------------------------------------------------------------*/
    /*1) public class Quest1 {}                 //компилируется
    2) public static class Quest1 {}            // нет смысла в статич классе
    3) public abstract final class Quest1 {}    // абстракт и финал не могут стоять вместе
    4) private class Quest1 {}                  // нет смысла в приватном классе
    5) final class Quest1 {}*/                  // финальный класс может быть
/**-------------------------------------------------------------------------------------------------------------------*/
    /*«Константное поле может быть проинициализировано …»
        - только один раз;
        - в статическом блоке инициализации
        - при объявлении или в конструкторе класса
    */
/**-------------------------------------------------------------------------------------------------------------------*/
    /*public static int method () {
        final int loc;
        System.out.println (loc);//1                //ощибка компиляции, не проинициализировано loc, а так
        loc=4;//2                                   // оно final, то записать мы туда ничего не сможем
        return loc+1;//3
    }
    public static void main (String [] args) {
        method (); method (); method ();
        System.out.println (method ());
    }*/

/**-------------------------------------------------------------------------------------------------------------------*/
    /*Выберите утверждения, корректно характеризующие модификаторы доступа (2):
     1) статические private-члены класса доступны только статическим методам этого класса;                  //неверно
     2) статические public-члены классы доступны всем методам этого класса;                                 //верно
     3) protected-члены класса доступны подклассам другого пакета;                                          //верно
     4) поле — член класса, объявленное без модификатора доступа, доступно в классах другого пакета.*/      //нет
/**-------------------------------------------------------------------------------------------------------------------*/
/*Сколько конструкторов вызовется при создании объекта в строке 1 (1)?
1) один;
2) два; +
3) три;
4) ошибка компиляции.*/

/*    public Ex_3_1() {
        System.out.println("Конструктор без параметров");
    }
    public Ex_3_1 (int i) {this (i, i);System.out.println("Конструктор с одним параметром");}
    public Ex_3_1 (int i, int j) {this ();System.out.println("Конструктор с двумя параметрами и вызов " +
            "конструктора без параметров");}
    public static void main (String [] args) {
        Ex_3_1 q = new Ex_3_1 (2,3); //1
    }
*/
/**-------------------------------------------------------------------------------------------------------------------*/
    public void meth (Number obj) {System.out.print ("1");}
    public void meth (Character obj) {System.out.print ("2");}
    private static void meth (Integer obj) {System.out.print ("3");}
    public void meth (int i) {System.out.print ("4");}
    public void meth (double d) {System.out.print ("5");}
    public static void main (String [] args) {
        Ex_3_1_6 q = new Ex_3_1_6 ();
        Number n = 67;
        Integer i = 78;
        q.meth (n);
        q.meth (i);

    }
    /*Что выведется на консоль после компиляции и запуска этой программы?
            1) 14
            2) 11
            3) 33
            4) 44
            5) 13                   ++++
            6) ошибка компиляции
            7) ошибка выполнения*/
/**-------------------------------------------------------------------------------------------------------------------*/




/**-------------------------------------------------------------------------------------------------------------------*/
}

